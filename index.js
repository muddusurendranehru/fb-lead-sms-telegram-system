// ============================================================================
// COMPLETE NEW index.js - HOMA Healthcare System
// Dr. Nehru's Diabetes Clinic - Lead Automation with WhatsApp Integration
// ============================================================================

const express = require('express');
const cors = require('cors');
const path = require('path');
const twilio = require('twilio');
const { createClient } = require('@supabase/supabase-js');
const fetch = require('node-fetch');

// Initialize Express app
const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));

// Initialize Twilio client
const client = twilio(process.env.TWILIO_ACCOUNT_SID, process.env.TWILIO_AUTH_TOKEN);

// Initialize Supabase client
const supabase = createClient(
    process.env.SUPABASE_URL,
    process.env.SUPABASE_ANON_KEY
);

// ============================================================================
// WHATSAPP TEMPLATES (ENGLISH & TELUGU)
// ============================================================================

const whatsappTemplates = {
    confirmation: {
        telugu: (name) => `üè• *HOMA Healthcare Center*
‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç ‡∞®‡±Ü‡∞π‡±ç‡∞∞‡±Ç - ‡∞°‡∞Ø‡∞æ‡∞¨‡±Ü‡∞ü‡∞ø‡∞∏‡±ç ‡∞∏‡±ç‡∞™‡±Ü‡∞∑‡∞≤‡∞ø‡∞∏‡±ç‡∞ü‡±ç

‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç ${name} ‡∞ó‡∞æ‡∞∞‡±Å,

‚úÖ *‡∞Æ‡±Ä ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø ‡∞∏‡∞≤‡∞π‡∞æ ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞∞‡±ç‡∞•‡∞® ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å*

üë®‚Äç‚öïÔ∏è *‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç:* ‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç ‡∞®‡±Ü‡∞π‡±ç‡∞∞‡±Ç (MD, DM ‡∞°‡∞Ø‡∞æ‡∞¨‡±Ü‡∞ü‡∞ø‡∞∏‡±ç)
‚è∞ *‡∞ï‡∞æ‡∞≤‡±ç ‡∞∏‡∞Æ‡∞Ø‡∞Ç:* 30 ‡∞®‡∞ø‡∞Æ‡∞ø‡∞∑‡∞æ‡∞≤‡±ç‡∞≤‡±ã
üìç *‡∞ï‡±ç‡∞≤‡∞ø‡∞®‡∞ø‡∞ï‡±ç:* HOMA Healthcare Center
üìû *‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç:* +91-XXXXXXXXXX

üìã *‡∞Æ‡±Ä ‡∞ö‡±Ü‡∞ï‡∞™‡±ç ‡∞ï‡±ã‡∞∏‡∞Ç:*
‚Ä¢ ‡∞ñ‡∞æ‡∞≥‡±Ä ‡∞ï‡∞°‡±Å‡∞™‡±Å‡∞§‡±ã ‡∞∞‡∞Ç‡∞°‡∞ø (12 ‡∞ó‡∞Ç‡∞ü‡∞≤‡±Å)
‚Ä¢ ‡∞™‡∞æ‡∞§ ‡∞∞‡∞ø‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞≤‡±Å ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±Å‡∞∞‡∞Ç‡∞°‡∞ø
‚Ä¢ ‡∞Æ‡∞Ç‡∞¶‡±Å‡∞≤ ‡∞ú‡∞æ‡∞¨‡∞ø‡∞§‡∞æ ‡∞∏‡∞ø‡∞¶‡±ç‡∞ß‡∞Ç ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø

‚ö†Ô∏è *‡∞Æ‡±Å‡∞ñ‡±ç‡∞Ø‡∞Æ‡±à‡∞® ‡∞ó‡∞Æ‡∞®‡∞ø‡∞ï:*
‡∞á‡∞¶‡∞ø ‡∞∏‡∞æ‡∞ß‡∞æ‡∞∞‡∞£ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á. ‡∞§‡±Ä‡∞µ‡±ç‡∞∞‡∞Æ‡±à‡∞® ‡∞≤‡∞ï‡±ç‡∞∑‡∞£‡∞æ‡∞≤‡∞ï‡±Å ‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á ‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç‚Äå‡∞®‡∞ø ‡∞∏‡∞Ç‡∞™‡±ç‡∞∞‡∞¶‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ 102‡∞ï‡∞ø ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø.

üåê *‡∞Ü‡∞®‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç:* fb-lead-sms-telegram-system.onrender.com

*HOMA Healthcare - ‡∞Æ‡±Ä ‡∞®‡∞Æ‡±ç‡∞Æ‡∞ï‡∞Æ‡±à‡∞® ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø ‡∞≠‡∞æ‡∞ó‡∞∏‡±ç‡∞µ‡∞æ‡∞Æ‡∞ø* üíö`,

        english: (name) => `üè• *HOMA Healthcare Center*
Dr. Nehru - Diabetes Specialist

Hello ${name},

‚úÖ *Your health consultation received*

üë®‚Äç‚öïÔ∏è *Doctor:* Dr. Nehru (MD, DM Diabetes)
‚è∞ *Call time:* Within 30 minutes
üìç *Clinic:* HOMA Healthcare Center
üìû *Helpline:* +91-XXXXXXXXXX

üìã *For your checkup:*
‚Ä¢ Come fasting (12 hours)
‚Ä¢ Bring previous reports
‚Ä¢ Prepare medication list

‚ö†Ô∏è *Important Notice:*
This is for general information only. For serious symptoms, consult doctor immediately or dial 102.

üåê *Online:* fb-lead-sms-telegram-system.onrender.com

*HOMA Healthcare - Your Trusted Health Partner* üíö`
    },

    followUp: {
        telugu: (name) => `üîî *HOMA Healthcare - ‡∞´‡∞æ‡∞≤‡±ã ‡∞Ö‡∞™‡±ç*

${name} ‡∞ó‡∞æ‡∞∞‡±Å, ‡∞Æ‡∞æ ‡∞ï‡∞æ‡∞≤‡±ç ‡∞µ‡∞ö‡±ç‡∞ö‡∞ø‡∞Ç‡∞¶‡∞æ?

üìû ‡∞∞‡∞æ‡∞ï‡∞™‡±ã‡∞§‡±á, ‡∞¶‡∞Ø‡∞ö‡±á‡∞∏‡∞ø Reply ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:
‚Ä¢ "‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø" - ‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ï‡±ã‡∞∏‡∞Ç
‚Ä¢ "‡∞∏‡∞Æ‡∞Ø‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø" - ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞∏‡±å‡∞ï‡∞∞‡±ç‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Æ‡±à‡∞® ‡∞∏‡∞Æ‡∞Ø‡∞Ç ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø

‚ö†Ô∏è *‡∞Ö‡∞§‡±ç‡∞Ø‡∞µ‡∞∏‡∞∞ ‡∞™‡∞∞‡∞ø‡∞∏‡±ç‡∞•‡∞ø‡∞§‡∞ø‡∞≤‡±ã:*
‡∞µ‡±Ü‡∞Ç‡∞ü‡∞®‡±á 102‡∞ï‡∞ø ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø ‡∞≤‡±á‡∞¶‡∞æ ‡∞∏‡∞Æ‡±Ä‡∞™ ‡∞π‡∞æ‡∞∏‡±ç‡∞™‡∞ø‡∞ü‡∞≤‡±ç‚Äå‡∞ï‡∞ø ‡∞µ‡±Ü‡∞≥‡±ç‡∞≤‡∞Ç‡∞°‡∞ø

üìû *‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç:* +91-XXXXXXXXXX
üè• *HOMA Healthcare Center*

*‡∞Æ‡±Ä ‡∞Ü‡∞∞‡±ã‡∞ó‡±ç‡∞Ø‡∞Æ‡±á ‡∞Æ‡∞æ ‡∞™‡±ç‡∞∞‡∞æ‡∞ß‡∞æ‡∞®‡±ç‡∞Ø‡∞§* üíö`,

        english: (name) => `üîî *HOMA Healthcare - Follow Up*

Hi ${name}, did you receive our call?

üìû If not, please reply:
‚Ä¢ "CALL ME" - for immediate callback
‚Ä¢ "TIME" - to schedule convenient time

‚ö†Ô∏è *For emergency:*
Immediately dial 102 or visit nearest hospital

üìû *Support:* +91-XXXXXXXXXX
üè• *HOMA Healthcare Center*

*Your health is our priority* üíö`
    },

    reminder: {
        telugu: (name, date, time) => `‚è∞ *‡∞Ö‡∞™‡∞æ‡∞Ø‡∞ø‡∞Ç‡∞ü‡±ç‚Äå‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç ‡∞∞‡∞ø‡∞Æ‡±à‡∞Ç‡∞°‡∞∞‡±ç*

${name} ‡∞ó‡∞æ‡∞∞‡±Å, ‡∞Æ‡±Ä ‡∞°‡∞Ø‡∞æ‡∞¨‡±Ü‡∞ü‡∞ø‡∞∏‡±ç ‡∞ö‡±Ü‡∞ï‡∞™‡±ç ‡∞∞‡±á‡∞™‡±Å:

üìÖ *‡∞§‡±á‡∞¶‡±Ä:* ${date || '‡∞∞‡±á‡∞™‡±Å'}
üïê *‡∞∏‡∞Æ‡∞Ø‡∞Ç:* ${time || '‡∞â‡∞¶‡∞Ø‡∞Ç 10:00 ‡∞ó‡∞Ç‡∞ü‡∞≤‡∞ï‡±Å'}
üè• *‡∞ö‡±ã‡∞ü‡±Å:* HOMA Healthcare Center

‚úÖ *‡∞ö‡±Ü‡∞ï‡±ç‚Äå‡∞≤‡∞ø‡∞∏‡±ç‡∞ü‡±ç:*
‚òê 12 ‡∞ó‡∞Ç‡∞ü‡∞≤‡±Å ‡∞ñ‡∞æ‡∞≥‡±Ä ‡∞ï‡∞°‡±Å‡∞™‡±Å
‚òê ‡∞™‡∞æ‡∞§ ‡∞∞‡∞ø‡∞™‡±ã‡∞∞‡±ç‡∞ü‡±ç‚Äå‡∞≤‡±Å ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±Å‡∞∞‡∞Ç‡∞°‡∞ø
‚òê ‡∞™‡±ç‡∞∞‡∞∏‡±ç‡∞§‡±Å‡∞§ ‡∞Æ‡∞Ç‡∞¶‡±Å‡∞≤ ‡∞ú‡∞æ‡∞¨‡∞ø‡∞§‡∞æ
‚òê ‡∞Ü‡∞ß‡∞æ‡∞∞‡±ç ‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç

üìû *‡∞ï‡∞®‡±ç‡∞´‡∞∞‡±ç‡∞Æ‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø* Reply ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:
‚Ä¢ "‡∞Ö‡∞µ‡±Å‡∞®‡±Å" - ‡∞®‡±á‡∞®‡±Å ‡∞µ‡∞∏‡±ç‡∞§‡∞æ‡∞®‡±Å
‚Ä¢ "‡∞∏‡∞Æ‡∞Ø‡∞Ç ‡∞Æ‡∞æ‡∞∞‡±ç‡∞ö‡∞Ç‡∞°‡∞ø" - ‡∞µ‡±á‡∞∞‡±á ‡∞∏‡∞Æ‡∞Ø‡∞Ç ‡∞ï‡∞æ‡∞µ‡∞æ‡∞≤‡∞ø

*HOMA Healthcare Center* üè•`,

        english: (name, date, time) => `‚è∞ *Appointment Reminder*

${name}, your diabetes checkup is tomorrow:

üìÖ *Date:* ${date || 'Tomorrow'}
üïê *Time:* ${time || '10:00 AM'}
üè• *Location:* HOMA Healthcare Center

‚úÖ *Checklist:*
‚òê 12 hours fasting
‚òê Bring previous reports
‚òê Current medication list
‚òê ID proof (Aadhar card)

üìû *Please confirm* by replying:
‚Ä¢ "YES" - I'll be there
‚Ä¢ "RESCHEDULE" - Need different time

*HOMA Healthcare Center* üè•`
    }
};

// ============================================================================
// SMS MESSAGE FUNCTION
// ============================================================================

async function sendSMSMessage(phoneNumber, message) {
    try {
        const response = await client.messages.create({
            body: message,
            from: process.env.TWILIO_PHONE_NUMBER,
            to: `+91${phoneNumber}`
        });
        
        console.log(`‚úÖ SMS sent to ${phoneNumber}:`, response.sid);
        return { success: true, messageId: response.sid };
    } catch (error) {
        console.error('‚ùå SMS error:', error);
        return { success: false, error: error.message };
    }
}

// ============================================================================
// WHATSAPP MESSAGE FUNCTION
// ============================================================================

async function sendWhatsAppMessage(phoneNumber, templateType, language, patientName, additionalData = {}) {
    // Safety check - only run if WhatsApp is enabled
    if (!process.env.TWILIO_WHATSAPP_FROM) {
        console.log('üì± WhatsApp not configured, continuing with SMS only...');
        return { success: false, reason: 'not_configured' };
    }

    try {
        // Clean and format phone number
        const cleanPhone = phoneNumber.replace(/^\+?91/, '');
        const whatsappNumber = `whatsapp:+91${cleanPhone}`;
        
        // Get the appropriate message template
        const message = whatsappTemplates[templateType][language](
            patientName, 
            additionalData.date, 
            additionalData.time
        );
        
        // Send WhatsApp message via Twilio
        const response = await client.messages.create({
            from: process.env.TWILIO_WHATSAPP_FROM,
            to: whatsappNumber,
            body: message
        });
        
        console.log(`‚úÖ WhatsApp sent to ${phoneNumber}:`, response.sid);
        
        // Log to database for tracking
        await logWhatsAppMessage(phoneNumber, templateType, response.sid, 'sent');
        
        return {
            success: true,
            messageId: response.sid,
            service: 'twilio_whatsapp',
            cost: 0.10 // Approximate USD cost
        };
        
    } catch (error) {
        console.error('‚ùå WhatsApp error (SMS backup will work):', error);
        
        // Log error but don't crash the system
        await logWhatsAppMessage(phoneNumber, templateType, null, 'failed', error.message);
        
        return {
            success: false,
            error: error.message,
            fallback: 'sms_working'
        };
    }
}

// ============================================================================
// TELEGRAM MESSAGE FUNCTION
// ============================================================================

async function sendTelegramMessage(message) {
    if (!process.env.TELEGRAM_BOT_TOKEN || !process.env.TELEGRAM_CHAT_ID) {
        console.log('Telegram not configured');
        return;
    }

    try {
        const url = `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/sendMessage`;
        
        await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: process.env.TELEGRAM_CHAT_ID,
                text: message,
                parse_mode: 'Markdown'
            })
        });
        
        console.log('‚úÖ Telegram notification sent');
    } catch (error) {
        console.error('‚ùå Telegram error:', error);
    }
}

// ============================================================================
// LOGGING FUNCTIONS
// ============================================================================

async function logWhatsAppMessage(phone, template, messageId, status, error = null) {
    try {
        if (supabase) {
            await supabase
                .from('whatsapp_logs')
                .insert([{
                    phone_number: phone,
                    template_type: template,
                    message_id: messageId,
                    status: status,
                    error_message: error,
                    service: 'twilio_whatsapp',
                    sent_at: new Date().toISOString()
                }]);
        }
    } catch (error) {
        console.error('Error logging WhatsApp message:', error);
        // Don't crash if logging fails
    }
}

// ============================================================================
// FOLLOW-UP SCHEDULER
// ============================================================================

function scheduleWhatsAppFollowUp(phoneNumber, language, patientName, delayHours = 2) {
    if (!process.env.TWILIO_WHATSAPP_FROM) return;
    
    setTimeout(async () => {
        try {
            await sendWhatsAppMessage(phoneNumber, 'followUp', language, patientName);
            console.log(`üì± Follow-up WhatsApp sent to ${patientName}`);
        } catch (error) {
            console.error('Follow-up WhatsApp failed:', error);
        }
    }, delayHours * 60 * 60 * 1000); // Convert hours to milliseconds
}

// ============================================================================
// ROUTES
// ============================================================================

// Serve the main HTML form
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

// Patient registration endpoint
app.post('/api/register-patient', async (req, res) => {
    const { name, phone, age, symptoms, preferredLanguage = 'english' } = req.body;
    
    try {
        // Validate required fields
        if (!name || !phone || !age || !symptoms) {
            return res.status(400).json({
                success: false,
                error: 'All fields are required'
            });
        }

        // Clean phone number
        const cleanPhone = phone.replace(/^\+?91/, '').replace(/\D/g, '');
        
        if (cleanPhone.length !== 10) {
            return res.status(400).json({
                success: false,
                error: 'Invalid phone number. Please enter 10-digit mobile number'
            });
        }

        // Save patient to Supabase
        const { data, error } = await supabase
            .from('patients')
            .insert([{
                name,
                phone: cleanPhone,
                age,
                symptoms,
                preferred_language: preferredLanguage,
                registration_time: new Date().toISOString(),
                source: 'facebook_ad',
                status: 'new'
            }])
            .select();
        
        if (error) throw error;
        const patientId = data[0].id;

        // Send SMS
        const smsMessage = preferredLanguage === 'telugu' 
            ? `‡∞®‡∞Æ‡∞∏‡±ç‡∞ï‡∞æ‡∞∞‡∞Ç ${name} ‡∞ó‡∞æ‡∞∞‡±Å, ‡∞Æ‡±Ä ‡∞°‡∞Ø‡∞æ‡∞¨‡±Ü‡∞ü‡∞ø‡∞∏‡±ç ‡∞∏‡∞≤‡∞π‡∞æ ‡∞Ö‡∞≠‡±ç‡∞Ø‡∞∞‡±ç‡∞•‡∞® ‡∞Ö‡∞Ç‡∞¶‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å. ‡∞°‡∞æ‡∞ï‡±ç‡∞ü‡∞∞‡±ç ‡∞®‡±Ü‡∞π‡±ç‡∞∞‡±Ç ‡∞§‡±ç‡∞µ‡∞∞‡∞≤‡±ã‡∞®‡±á ‡∞Æ‡±Ä‡∞ï‡±Å ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞∏‡±ç‡∞§‡∞æ‡∞∞‡±Å. HOMA Healthcare - +91-XXXXXXXXXX`
            : `Hello ${name}, your diabetes consultation request has been received. Dr. Nehru will call you shortly. HOMA Healthcare - +91-XXXXXXXXXX`;
        
        const smsResult = await sendSMSMessage(cleanPhone, smsMessage);

        // Send WhatsApp message
        const whatsappResult = await sendWhatsAppMessage(cleanPhone, 'confirmation', preferredLanguage, name);

        // Send Telegram notification to staff
        const telegramMessage = `üè• *New Diabetes Patient - HOMA Healthcare*

üë§ *Patient:* ${name}
üìû *Mobile:* +91${cleanPhone}
üéÇ *Age:* ${age} years
üîç *Symptoms:* ${symptoms}
üó£Ô∏è *Language:* ${preferredLanguage}
‚è∞ *Registration:* ${new Date().toLocaleString('en-IN')}

üì± *Message Status:*
${smsResult.success ? '‚úÖ' : '‚ùå'} SMS
${whatsappResult.success ? '‚úÖ' : '‚ö†Ô∏è'} WhatsApp ${whatsappResult.success ? '(sent)' : '(SMS backup active)'}

üí∞ *Communication Cost:* ‚Çπ${whatsappResult.success ? '8' : '0.50'} (${whatsappResult.success ? 'WhatsApp' : 'SMS only'})

üéØ *Action:* Please call ${name} within 30 minutes!
üìã *Patient ID:* ${patientId}

${whatsappResult.success ? 'üì± *WhatsApp Active* - Patient received professional message!' : 'üì± *WhatsApp Failed* - SMS backup working fine'}`;

        await sendTelegramMessage(telegramMessage);

        // Schedule follow-up WhatsApp (only if first message succeeded)
        if (whatsappResult.success) {
            scheduleWhatsAppFollowUp(cleanPhone, preferredLanguage, name, 2); // Follow up after 2 hours
        }

        // Success response
        res.json({
            success: true,
            message: 'Patient registered successfully with enhanced communication',
            patientId: patientId,
            communicationStatus: {
                sms: smsResult.success ? 'sent' : 'failed',
                whatsapp: whatsappResult.success ? 'sent' : 'fallback_to_sms',
                whatsappService: whatsappResult.service || 'not_available'
            },
            followUpScheduled: whatsappResult.success
        });

    } catch (error) {
        console.error('Enhanced registration error:', error);
        res.status(500).json({
            success: false,
            error: error.message
        });
    }
});

// WhatsApp webhook for delivery status tracking
app.post('/webhook/whatsapp-status', (req, res) => {
    const { MessageSid, MessageStatus, To, From, ErrorCode } = req.body;
    
    console.log(`üì± WhatsApp Status Update: ${MessageStatus} for ${MessageSid}`);
    
    // Log status update to database
    if (MessageStatus === 'delivered') {
        console.log(`‚úÖ WhatsApp delivered to ${To}`);
    } else if (MessageStatus === 'failed') {
        console.log(`‚ùå WhatsApp failed to ${To}: Error ${ErrorCode}`);
    }
    
    // Update status in database
    logWhatsAppMessage(
        To.replace('whatsapp:+91', ''), 
        'status_update', 
        MessageSid, 
        MessageStatus
    );
    
    res.sendStatus(200);
});

// Get all patients (admin endpoint)
app.get('/api/patients', async (req, res) => {
    try {
        const { data, error } = await supabase
            .from('patients')
            .select('*')
            .order('registration_time', { ascending: false });
        
        if (error) throw error;
        
        res.json({
            success: true,
            patients: data
        });
    } catch (error) {
        console.error('Error fetching patients:', error);
        res.status(500).json({
            success: false,
            error: error.message
        });
    }
});

// Health check endpoint
app.get('/health', (req, res) => {
    res.json({
        status: 'healthy',
        timestamp: new Date().toISOString(),
        services: {
            sms: !!process.env.TWILIO_PHONE_NUMBER,
            whatsapp: !!process.env.TWILIO_WHATSAPP_FROM,
            telegram: !!process.env.TELEGRAM_BOT_TOKEN,
            database: !!process.env.SUPABASE_URL
        }
    });
});

// ============================================================================
// SERVER STARTUP
// ============================================================================

app.listen(PORT, () => {
    console.log(`üöÄ HOMA Healthcare Server running on port ${PORT}`);
    console.log(`üì± WhatsApp: ${process.env.TWILIO_WHATSAPP_FROM ? 'Enabled' : 'Disabled (SMS only)'}`);
    console.log(`üìß Telegram: ${process.env.TELEGRAM_BOT_TOKEN ? 'Enabled' : 'Disabled'}`);
    console.log(`üíæ Database: ${process.env.SUPABASE_URL ? 'Connected' : 'Not configured'}`);
    console.log(`üåê Visit: http://localhost:${PORT}`);
});

// ============================================================================
// ENVIRONMENT VARIABLES REQUIRED:
// ============================================================================
/*
TWILIO_ACCOUNT_SID=AC1cc2ad09edc74744d48f448e25b9005d
TWILIO_AUTH_TOKEN=your_auth_token
TWILIO_PHONE_NUMBER=+1XXXXXXXXXX
TWILIO_WHATSAPP_FROM=whatsapp:+14155238886
SUPABASE_URL=https://oztndjdowoewkbeznjvd.supabase.co
SUPABASE_ANON_KEY=your_supabase_key
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_CHAT_ID=-1002557630252
PORT=3000
*/
